{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server.",
        "title": "Data portal API",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:7721",
    "basePath": "/",
    "paths": {
        "/cartitems": {
            "get": {
                "description": "Get all carts",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Show all carts",
                "operationId": "get-all-carts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cart.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "create cart",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Create cart",
                "operationId": "add-cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Cart Item object",
                        "name": "CartItem",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cart.cartitem"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.CartItem"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/cartitems/{cartitem_id}": {
            "get": {
                "description": "Get cart by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Show a cart by id",
                "operationId": "get-cart-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cart Item ID",
                        "name": "cartitem_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CartItem"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete cart by ID",
                "tags": [
                    "Cart"
                ],
                "summary": "Delete a cart",
                "operationId": "delete-cart-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cart Item ID",
                        "name": "cartitem_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/catalogs": {
            "get": {
                "description": "Get all catalogs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Catalog"
                ],
                "summary": "Show all catalogs",
                "operationId": "get-all-catalogs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/catalog.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "create catalog",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Catalog"
                ],
                "summary": "Create catalog",
                "operationId": "add-catalog",
                "parameters": [
                    {
                        "description": "Catalog object",
                        "name": "Catalog",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/catalog.catalog"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Catalog"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/catalogs/{catalog_id}": {
            "get": {
                "description": "Get catalog by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Catalog"
                ],
                "summary": "Show a catalog by id",
                "operationId": "get-catalog-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catalog ID",
                        "name": "catalog_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Catalog"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update catalog by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Catalog"
                ],
                "summary": "Update a catalog by id",
                "operationId": "update-catalog-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catalog ID",
                        "name": "catalog_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Catalog",
                        "name": "Catalog",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/catalog.catalog"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Catalog"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete catalog by ID",
                "tags": [
                    "Catalog"
                ],
                "summary": "Delete a catalog",
                "operationId": "delete-catalog-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Catalog ID",
                        "name": "catalog_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/currencies": {
            "get": {
                "description": "Get all currencies",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currency"
                ],
                "summary": "Show all currencies",
                "operationId": "get-all-currencies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/currency.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create currency",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currency"
                ],
                "summary": "Create currency",
                "operationId": "add-currency",
                "parameters": [
                    {
                        "description": "Currency object",
                        "name": "Currency",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/currency.currency"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Currency"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/currencies/{currency_id}": {
            "get": {
                "description": "get currency by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currency"
                ],
                "summary": "Show a currency by id",
                "operationId": "get-currency-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Currency ID",
                        "name": "currency_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Currency"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update currency by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currency"
                ],
                "summary": "Update a currency by id",
                "operationId": "update-currency-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Currency ID",
                        "name": "currency_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Currency",
                        "name": "Currency",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/currency.currency"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Currency"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete currency by ID",
                "tags": [
                    "Currency"
                ],
                "summary": "Delete a currency",
                "operationId": "delete-currency-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Currency ID",
                        "name": "currency_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/datasets": {
            "get": {
                "description": "Get all datsets",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Show all datsets",
                "operationId": "get-all-datsets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dataset.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "create dataset",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Create dataset",
                "operationId": "add-dataset",
                "parameters": [
                    {
                        "description": "Dataset object",
                        "name": "Dataset",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dataset.dataset"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Dataset"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/datasets/{dataset_id}": {
            "get": {
                "description": "Get dataset by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Show a dataset by id",
                "operationId": "get-dataset-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Dataset ID",
                        "name": "dataset_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Dataset"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update dataset by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Update a dataset by id",
                "operationId": "update-dataset-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dataset ID",
                        "name": "dataset_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dataset",
                        "name": "Dataset",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/dataset.dataset"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Dataset"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete dataset by ID",
                "tags": [
                    "Dataset"
                ],
                "summary": "Delete a dataset",
                "operationId": "delete-dataset-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dataset ID",
                        "name": "dataset_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/datasets/{dataset_id}/format": {
            "get": {
                "description": "Get all datsets format",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset Format"
                ],
                "summary": "Show all datsets format",
                "operationId": "get-all-datsets-formats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dataset ID",
                        "name": "dataset_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/format.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create dataset format",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset Format"
                ],
                "summary": "Create dataset format",
                "operationId": "add-dataset-format",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dataset ID",
                        "name": "dataset_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dataset Format object",
                        "name": "DatasetFormat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/format.datasetFormat"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.DatasetFormat"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/datasets/{dataset_id}/format/{format_id}": {
            "delete": {
                "description": "Delete dataset format by ID",
                "tags": [
                    "Dataset Format"
                ],
                "summary": "Delete a dataset format",
                "operationId": "delete-dataset-format-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dataset ID",
                        "name": "dataset_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Dataset Format ID",
                        "name": "format_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/formats": {
            "get": {
                "description": "Get all formats",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Format"
                ],
                "summary": "Show all formats",
                "operationId": "get-all-formats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "limit per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/format.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create format",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Format"
                ],
                "summary": "Create format",
                "operationId": "add-format",
                "parameters": [
                    {
                        "description": "Format object",
                        "name": "Format",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/format.format"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Format"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/formats/{format_id}": {
            "get": {
                "description": "Get format by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Format"
                ],
                "summary": "Show a format by id",
                "operationId": "get-format-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "format ID",
                        "name": "format_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Format"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update format by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Format"
                ],
                "summary": "Update a format by id",
                "operationId": "update-format-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Format ID",
                        "name": "format_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Format",
                        "name": "format",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/format.format"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Format"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete format by ID",
                "tags": [
                    "Format"
                ],
                "summary": "Delete a format",
                "operationId": "delete-format-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Format ID",
                        "name": "format_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/media": {
            "get": {
                "description": "Get media",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Medium"
                ],
                "summary": "Show media",
                "operationId": "get-media",
                "parameters": [
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/medium.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create medium",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Medium"
                ],
                "summary": "Create medium",
                "operationId": "add-medium",
                "parameters": [
                    {
                        "description": "Medium object",
                        "name": "Medium",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/medium.medium"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Medium"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/media/{medium_id}": {
            "get": {
                "description": "Get medium by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Medium"
                ],
                "summary": "Show a medium by id",
                "operationId": "get-medium-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Medium ID",
                        "name": "medium_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Medium"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update medium by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Medium"
                ],
                "summary": "Update a medium by id",
                "operationId": "update-medium-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Medium ID",
                        "name": "medium_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Medium",
                        "name": "Medium",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/medium.medium"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Medium"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete medium by ID",
                "tags": [
                    "Medium"
                ],
                "summary": "Delete a medium",
                "operationId": "delete-medium-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Medium ID",
                        "name": "medium_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/memberships": {
            "get": {
                "description": "Get all memberships",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Membership"
                ],
                "summary": "Show all memberships",
                "operationId": "get-all-memberships",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/membership.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create membership",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Membership"
                ],
                "summary": "Create membership",
                "operationId": "add-membership",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Membership object",
                        "name": "Membership",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/membership.membership"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Membership"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/memberships/{membership_id}": {
            "get": {
                "description": "Get membership by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Membership"
                ],
                "summary": "Show a membership by id",
                "operationId": "get-membership-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Membership ID",
                        "name": "membership_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Membership"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete membership by ID",
                "tags": [
                    "Membership"
                ],
                "summary": "Delete a membership",
                "operationId": "delete-membership-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Membership ID",
                        "name": "membership_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "description": "Get all orders",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Show all orders",
                "operationId": "get-all-orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/order.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "create orders",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Create orders",
                "operationId": "add-orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Order"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/orders/{order_id}": {
            "get": {
                "description": "Get orders by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Show a orders by id",
                "operationId": "get-orders-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Order"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete orders by ID",
                "tags": [
                    "Order"
                ],
                "summary": "Delete a orders",
                "operationId": "delete-orders-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/payments": {
            "get": {
                "description": "Get all payments",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Show all payments",
                "operationId": "get-all-payments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/payment.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create payment",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Create payment",
                "operationId": "add-payment",
                "parameters": [
                    {
                        "description": "Payment object",
                        "name": "Payment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payment.payment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Payment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/payments/{payment_id}": {
            "get": {
                "description": "Get payment by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Show a payment by id",
                "operationId": "get-payment-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment ID",
                        "name": "payment_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Payment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete payment by ID",
                "tags": [
                    "Payment"
                ],
                "summary": "Delete a payment",
                "operationId": "delete-payment-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment ID",
                        "name": "payment_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/plans": {
            "get": {
                "description": "Get all plans",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plan"
                ],
                "summary": "Show all plans",
                "operationId": "get-all-plans",
                "parameters": [
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/plan.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "create plan",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plan"
                ],
                "summary": "Create plan",
                "operationId": "add-plan",
                "parameters": [
                    {
                        "description": "Plan object",
                        "name": "Plan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/plan.plan"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Plan"
                        }
                    }
                }
            }
        },
        "/plans/{plan_id}": {
            "get": {
                "description": "Get plan by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plan"
                ],
                "summary": "Show a plan by id",
                "operationId": "get-plan-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plan ID",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Plan"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update plan by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plan"
                ],
                "summary": "Update a plan by id",
                "operationId": "update-plan-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plan ID",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Plan",
                        "name": "Plan",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/plan.plan"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Plan"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete plan by ID",
                "tags": [
                    "Plan"
                ],
                "summary": "Delete a plan",
                "operationId": "delete-plan-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plan ID",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "description": "Get all products",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Show all products",
                "operationId": "get-all-products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create product",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Create product",
                "operationId": "add-product",
                "parameters": [
                    {
                        "description": "Product object",
                        "name": "Product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.product"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/products/{product_id}": {
            "get": {
                "description": "Get product by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Show a product by id",
                "operationId": "get-product-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update product by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Update a product by id",
                "operationId": "update-product-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product",
                        "name": "Product",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/product.product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete product by ID",
                "tags": [
                    "Product"
                ],
                "summary": "Delete a product",
                "operationId": "delete-product-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/search": {
            "post": {
                "description": "Global search for all entities",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Global search for all entities",
                "operationId": "search-entities",
                "parameters": [
                    {
                        "description": "Search",
                        "name": "Search",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/search.searchQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/tags": {
            "get": {
                "description": "Get all tags",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag"
                ],
                "summary": "Show all tags",
                "operationId": "get-all-tags",
                "parameters": [
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tag.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create tag",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag"
                ],
                "summary": "Create tag",
                "operationId": "add-tag",
                "parameters": [
                    {
                        "description": "Tag object",
                        "name": "Tag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tag.tag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Tag"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/tags/{tag_id}": {
            "get": {
                "description": "Get tag by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag"
                ],
                "summary": "Show a tag by id",
                "operationId": "get-tag-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag ID",
                        "name": "tag_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Tag"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update tag by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag"
                ],
                "summary": "Update a tag by id",
                "operationId": "update-tag-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag ID",
                        "name": "tag_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tag",
                        "name": "Tag",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/tag.tag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Tag"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete tag by ID",
                "tags": [
                    "Tag"
                ],
                "summary": "Delete a tag",
                "operationId": "delete-tag-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag ID",
                        "name": "tag_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "cart.cartitem": {
            "type": "object",
            "required": [
                "product_id",
                "status"
            ],
            "properties": {
                "membership_id": {
                    "type": "integer"
                },
                "product_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "cart.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CartItem"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "catalog.catalog": {
            "type": "object",
            "required": [
                "published_date",
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "featured_medium_id": {
                    "type": "integer"
                },
                "product_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "published_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "catalog.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Catalog"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "currency.currency": {
            "type": "object",
            "required": [
                "iso_code",
                "name"
            ],
            "properties": {
                "iso_code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "currency.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Currency"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dataset.dataset": {
            "type": "object",
            "required": [
                "price"
            ],
            "properties": {
                "contact_email": {
                    "type": "string"
                },
                "contact_name": {
                    "type": "string"
                },
                "currency_id": {
                    "type": "integer"
                },
                "data_standard": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "featured_medium_id": {
                    "type": "integer"
                },
                "frequency": {
                    "type": "string"
                },
                "granularity": {
                    "type": "string"
                },
                "license": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "related_articles": {
                    "type": "string"
                },
                "sample_url": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "temporal_coverage": {
                    "type": "string"
                },
                "time_saved": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dataset.datasetData": {
            "type": "object",
            "required": [
                "currency_id",
                "price"
            ],
            "properties": {
                "contact_email": {
                    "type": "string"
                },
                "contact_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "object",
                    "$ref": "#/definitions/model.Currency"
                },
                "currency_id": {
                    "type": "integer"
                },
                "data_standard": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "featured_medium": {
                    "type": "object",
                    "$ref": "#/definitions/model.Medium"
                },
                "featured_medium_id": {
                    "type": "integer"
                },
                "formats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DatasetFormat"
                    }
                },
                "frequency": {
                    "type": "string"
                },
                "granularity": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "license": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Product"
                    }
                },
                "related_articles": {
                    "type": "string"
                },
                "sample_url": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Tag"
                    }
                },
                "temporal_coverage": {
                    "type": "string"
                },
                "time_saved": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dataset.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dataset.datasetData"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "format.datasetFormat": {
            "type": "object",
            "required": [
                "format_id",
                "url"
            ],
            "properties": {
                "format_id": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "format.format": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "is_default": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "format.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DatasetFormat"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "medium.medium": {
            "type": "object",
            "required": [
                "file_size",
                "name"
            ],
            "properties": {
                "alt_text": {
                    "type": "string"
                },
                "caption": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dimensions": {
                    "type": "string"
                },
                "file_size": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "medium.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Medium"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "membership.membership": {
            "type": "object",
            "required": [
                "plan_id"
            ],
            "properties": {
                "plan_id": {
                    "type": "integer"
                }
            }
        },
        "membership.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Membership"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "model.CartItem": {
            "type": "object",
            "required": [
                "product_id",
                "status",
                "user_id"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "membership": {
                    "type": "object",
                    "$ref": "#/definitions/model.Membership"
                },
                "membership_id": {
                    "type": "integer"
                },
                "product": {
                    "type": "object",
                    "$ref": "#/definitions/model.Product"
                },
                "product_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.Catalog": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "featured_medium": {
                    "type": "object",
                    "$ref": "#/definitions/model.Medium"
                },
                "featured_medium_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Plan"
                    }
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Product"
                    }
                },
                "published_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Currency": {
            "type": "object",
            "required": [
                "iso_code",
                "name"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "iso_code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Dataset": {
            "type": "object",
            "required": [
                "currency_id",
                "price"
            ],
            "properties": {
                "contact_email": {
                    "type": "string"
                },
                "contact_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "object",
                    "$ref": "#/definitions/model.Currency"
                },
                "currency_id": {
                    "type": "integer"
                },
                "data_standard": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "featured_medium": {
                    "type": "object",
                    "$ref": "#/definitions/model.Medium"
                },
                "featured_medium_id": {
                    "type": "integer"
                },
                "frequency": {
                    "type": "string"
                },
                "granularity": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "license": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Product"
                    }
                },
                "related_articles": {
                    "type": "string"
                },
                "sample_url": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Tag"
                    }
                },
                "temporal_coverage": {
                    "type": "string"
                },
                "time_saved": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.DatasetFormat": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "dataset_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "format": {
                    "type": "object",
                    "$ref": "#/definitions/model.Format"
                },
                "format_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "model.Format": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_default": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Medium": {
            "type": "object",
            "properties": {
                "alt_text": {
                    "type": "string"
                },
                "caption": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dimensions": {
                    "type": "string"
                },
                "file_size": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "model.Membership": {
            "type": "object",
            "required": [
                "plan_id",
                "status",
                "user_id"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "payment": {
                    "type": "object",
                    "$ref": "#/definitions/model.Payment"
                },
                "payment_id": {
                    "type": "integer"
                },
                "plan": {
                    "type": "object",
                    "$ref": "#/definitions/model.Plan"
                },
                "plan_id": {
                    "type": "integer"
                },
                "razorpay_order_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.Order": {
            "type": "object",
            "required": [
                "status",
                "user_id"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "payment": {
                    "type": "object",
                    "$ref": "#/definitions/model.Payment"
                },
                "payment_id": {
                    "type": "integer"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Product"
                    }
                },
                "razorpay_order_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.Payment": {
            "type": "object",
            "required": [
                "amount",
                "currency_id",
                "gateway",
                "status"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "object",
                    "$ref": "#/definitions/model.Currency"
                },
                "currency_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "gateway": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "razorpay_payment_id": {
                    "type": "string"
                },
                "razorpay_signature": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Plan": {
            "type": "object",
            "required": [
                "currency_id",
                "duration",
                "name",
                "price",
                "status"
            ],
            "properties": {
                "catalogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Catalog"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "object",
                    "$ref": "#/definitions/model.Currency"
                },
                "currency_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Product": {
            "type": "object",
            "required": [
                "currency_id",
                "price",
                "slug",
                "status",
                "title"
            ],
            "properties": {
                "catalogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Catalog"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "object",
                    "$ref": "#/definitions/model.Currency"
                },
                "currency_id": {
                    "type": "integer"
                },
                "datasets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Dataset"
                    }
                },
                "deleted_at": {
                    "type": "string"
                },
                "featured_medium": {
                    "type": "object",
                    "$ref": "#/definitions/model.Medium"
                },
                "featured_medium_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Order"
                    }
                },
                "price": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Tag"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Tag": {
            "type": "object",
            "required": [
                "slug",
                "title"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "datasets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Dataset"
                    }
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Product"
                    }
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "order.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Order"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "payment.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Payment"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "payment.payment": {
            "type": "object",
            "required": [
                "currency_id",
                "entity_id",
                "for",
                "razorpay_payment_id",
                "razorpay_signature"
            ],
            "properties": {
                "currency_id": {
                    "type": "integer"
                },
                "entity_id": {
                    "type": "integer"
                },
                "for": {
                    "type": "string"
                },
                "gateway": {
                    "type": "string"
                },
                "razorpay_payment_id": {
                    "type": "string"
                },
                "razorpay_signature": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "plan.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Plan"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "plan.plan": {
            "type": "object",
            "required": [
                "currency_id",
                "duration",
                "name",
                "price"
            ],
            "properties": {
                "catalog_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "currency_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "product.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Product"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "product.product": {
            "type": "object",
            "required": [
                "price",
                "slug",
                "title"
            ],
            "properties": {
                "currency_id": {
                    "type": "integer"
                },
                "dataset_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "featured_medium_id": {
                    "type": "integer"
                },
                "price": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "product.productRes": {
            "type": "object",
            "required": [
                "currency_id",
                "price",
                "slug",
                "status",
                "title"
            ],
            "properties": {
                "catalogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Catalog"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "object",
                    "$ref": "#/definitions/model.Currency"
                },
                "currency_id": {
                    "type": "integer"
                },
                "datasets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Dataset"
                    }
                },
                "deleted_at": {
                    "type": "string"
                },
                "featured_medium": {
                    "type": "object",
                    "$ref": "#/definitions/model.Medium"
                },
                "featured_medium_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "memberships": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Membership"
                    }
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Order"
                    }
                },
                "price": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Tag"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "search.searchQuery": {
            "type": "object",
            "required": [
                "q"
            ],
            "properties": {
                "facetFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "filters": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "q": {
                    "type": "string"
                }
            }
        },
        "tag.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Tag"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "tag.tag": {
            "type": "object",
            "required": [
                "slug",
                "title"
            ],
            "properties": {
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    }
}