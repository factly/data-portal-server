// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2020-06-10 13:23:31.552924369 +0530 IST m=+0.093000169

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/carts": {
            "get": {
                "description": "Get all carts",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Show all carts",
                "operationId": "get-all-carts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/cart.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "create cart",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Create cart",
                "operationId": "add-cart",
                "parameters": [
                    {
                        "description": "Cart object",
                        "name": "Cart",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cart.cart"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Cart"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/carts/{cart_id}": {
            "get": {
                "description": "Get cart by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Show a cart by id",
                "operationId": "get-cart-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart ID",
                        "name": "cart_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Cart"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update cart by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Update a cart by id",
                "operationId": "update-cart-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart ID",
                        "name": "cart_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Cart",
                        "name": "Cart",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/cart.cart"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Cart"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete cart by ID",
                "tags": [
                    "Cart"
                ],
                "summary": "Delete a cart",
                "operationId": "delete-cart-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart ID",
                        "name": "cart_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/carts/{cart_id}/items": {
            "get": {
                "description": "Get all cartItems",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CartItem"
                ],
                "summary": "Show all cartItems",
                "operationId": "get-all-cart-items",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart ID",
                        "name": "cart_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/item.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "create cartItem",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CartItem"
                ],
                "summary": "Create cartItem",
                "operationId": "add-cart-item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart ID",
                        "name": "cart_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "CartItem object",
                        "name": "CartItem",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/item.cartItem"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.CartItem"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/carts/{cart_id}/items/{item_id}": {
            "get": {
                "description": "Get cartItem by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CartItem"
                ],
                "summary": "Show a cartItem by id",
                "operationId": "get-cart-item-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart ID",
                        "name": "cart_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cart-item ID",
                        "name": "item_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CartItem"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update cartItem by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CartItem"
                ],
                "summary": "Update a cartItem by id",
                "operationId": "update-cart-item-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart ID",
                        "name": "cart_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cart-item ID",
                        "name": "item_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "CartItem",
                        "name": "CartItem",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/item.cartItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CartItem"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete cartItem by ID",
                "tags": [
                    "CartItem"
                ],
                "summary": "Delete a cartItem",
                "operationId": "delete-cart-item-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart ID",
                        "name": "cart_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cart-item ID",
                        "name": "item_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "description": "Get all categories",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Show all categories",
                "operationId": "get-all-categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/category.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "create category",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Create category",
                "operationId": "add-category",
                "parameters": [
                    {
                        "description": "Category object",
                        "name": "Category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/category.category"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/categories/{category_id}": {
            "get": {
                "description": "Get category by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Show a category by id",
                "operationId": "get-category-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update category by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Update a category by id",
                "operationId": "update-category-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category",
                        "name": "Category",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/category.category"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete category by ID",
                "tags": [
                    "Category"
                ],
                "summary": "Delete a category",
                "operationId": "delete-category-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/currencies": {
            "get": {
                "description": "Get all currencies",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currency"
                ],
                "summary": "Show all currencies",
                "operationId": "get-all-currencies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/currency.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create currency",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currency"
                ],
                "summary": "Create currency",
                "operationId": "add-currency",
                "parameters": [
                    {
                        "description": "Currency object",
                        "name": "Currency",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/currency.currency"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Currency"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/currencies/{currency_id}": {
            "get": {
                "description": "get currency by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currency"
                ],
                "summary": "Show a currency by id",
                "operationId": "get-currency-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Currency ID",
                        "name": "currency_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Currency"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update currency by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Currency"
                ],
                "summary": "Update a currency by id",
                "operationId": "update-currency-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Currency ID",
                        "name": "currency_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Currency",
                        "name": "Currency",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/currency.currency"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Currency"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete currency by ID",
                "tags": [
                    "Currency"
                ],
                "summary": "Delete a currency",
                "operationId": "delete-currency-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Currency ID",
                        "name": "currency_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/datasets": {
            "get": {
                "description": "Get all datsets",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Show all datsets",
                "operationId": "get-all-datsets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dataset.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "create dataset",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Create dataset",
                "operationId": "add-dataset",
                "parameters": [
                    {
                        "description": "Dataset object",
                        "name": "Dataset",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dataset.dataset"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Dataset"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/datasets/{dataset_id}": {
            "put": {
                "description": "Update dataset by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Update a dataset by id",
                "operationId": "update-dataset-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dataset ID",
                        "name": "dataset_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dataset",
                        "name": "Dataset",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/dataset.dataset"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Dataset"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete dataset by ID",
                "tags": [
                    "Dataset"
                ],
                "summary": "Delete a dataset",
                "operationId": "delete-dataset-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dataset ID",
                        "name": "dataset_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/datasets/{dataset_id}/": {
            "get": {
                "description": "Get dataset by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Show a dataset by id",
                "operationId": "get-dataset-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dataset ID",
                        "name": "dataset_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Dataset"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/datasets/{dataset_id}/format": {
            "post": {
                "description": "Create dataset format",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset Format"
                ],
                "summary": "Create dataset format",
                "operationId": "add-dataset-format",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dataset ID",
                        "name": "dataset_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dataset Format object",
                        "name": "DatasetFormat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/format.datasetFormat"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.DatasetFormat"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/datasets/{dataset_id}/format/{format_id}": {
            "delete": {
                "description": "Delete dataset format by ID",
                "tags": [
                    "Dataset Format"
                ],
                "summary": "Delete a dataset format",
                "operationId": "delete-dataset-format-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dataset ID",
                        "name": "dataset_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Dataset Format ID",
                        "name": "format_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/formats": {
            "get": {
                "description": "Get all formats",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Format"
                ],
                "summary": "Show all formats",
                "operationId": "get-all-formats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "limit per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/format.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create format",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Format"
                ],
                "summary": "Create format",
                "operationId": "add-format",
                "parameters": [
                    {
                        "description": "Format object",
                        "name": "Format",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/format.format"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Format"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/formats/{format_id}": {
            "get": {
                "description": "Get format by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Format"
                ],
                "summary": "Show a format by id",
                "operationId": "get-format-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "format ID",
                        "name": "format_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Format"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update format by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Format"
                ],
                "summary": "Update a format by id",
                "operationId": "update-format-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Format ID",
                        "name": "format_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Format",
                        "name": "format",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/format.format"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Format"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete format by ID",
                "tags": [
                    "Format"
                ],
                "summary": "Delete a format",
                "operationId": "delete-format-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Format ID",
                        "name": "format_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/memberships": {
            "get": {
                "description": "Get all memberships",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Membership"
                ],
                "summary": "Show all memberships",
                "operationId": "get-all-memberships",
                "parameters": [
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/membership.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create membership",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Membership"
                ],
                "summary": "Create membership",
                "operationId": "add-membership",
                "parameters": [
                    {
                        "description": "Membership object",
                        "name": "Membership",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/membership.membership"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Membership"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/memberships/{membership_id}": {
            "get": {
                "description": "Get membership by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Membership"
                ],
                "summary": "Show a membership by id",
                "operationId": "get-membership-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Membership ID",
                        "name": "membership_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Membership"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update membership by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Membership"
                ],
                "summary": "Update a membership by id",
                "operationId": "update-membership-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Membership ID",
                        "name": "membership_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Membership",
                        "name": "Membership",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/membership.membership"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Membership"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete membership by ID",
                "tags": [
                    "Membership"
                ],
                "summary": "Delete a membership",
                "operationId": "delete-membership-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Membership ID",
                        "name": "membership_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "description": "Get all orders",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Show all orders",
                "operationId": "get-all-orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/order.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "create orders",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Create orders",
                "operationId": "add-orders",
                "parameters": [
                    {
                        "description": "Order object",
                        "name": "Order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/order.order"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Order"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/orders/{order_id}": {
            "get": {
                "description": "Get orders by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Show a orders by id",
                "operationId": "get-orders-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Order"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update orders by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Update a orders by id",
                "operationId": "update-orders-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Order",
                        "name": "Order",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/order.order"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Order"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete orders by ID",
                "tags": [
                    "Order"
                ],
                "summary": "Delete a orders",
                "operationId": "delete-orders-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/orders/{order_id}/items": {
            "get": {
                "description": "Get all order items",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderItem"
                ],
                "summary": "Show all order items",
                "operationId": "get-all-order-items",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/item.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "create order items",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderItem"
                ],
                "summary": "Create order items",
                "operationId": "add-order-item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Order item object",
                        "name": "OrderItem",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/item.orderItem"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.OrderItem"
                        }
                    }
                }
            }
        },
        "/orders/{order_id}/items/{item_id}": {
            "get": {
                "description": "Get order item by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderItem"
                ],
                "summary": "Show a order item by id",
                "operationId": "get-order-item-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Order item ID",
                        "name": "item_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.OrderItem"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update orderItems by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderItem"
                ],
                "summary": "Update a orderItems by id",
                "operationId": "update-orderItems-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "OrderItem ID",
                        "name": "item_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "OrderItem",
                        "name": "OrderItem",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/item.orderItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.OrderItem"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete order item by ID",
                "tags": [
                    "OrderItem"
                ],
                "summary": "Delete a order item",
                "operationId": "delete-order-items-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "OrderItem ID",
                        "name": "item_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/payments": {
            "get": {
                "description": "Get all payments",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Show all payments",
                "operationId": "get-all-payments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/payment.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create payment",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Create payment",
                "operationId": "add-payment",
                "parameters": [
                    {
                        "description": "Payment object",
                        "name": "Payment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payment.payment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Payment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/payments/{payment_id}": {
            "get": {
                "description": "Get payment by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Show a payment by id",
                "operationId": "get-payment-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment ID",
                        "name": "payment_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Payment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update payment by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Update a payment by id",
                "operationId": "update-payment-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment ID",
                        "name": "payment_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payment",
                        "name": "Payment",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/payment.payment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Payment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete payment by ID",
                "tags": [
                    "Payment"
                ],
                "summary": "Delete a payment",
                "operationId": "delete-payment-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment ID",
                        "name": "payment_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/plans": {
            "get": {
                "description": "Get all plans",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plan"
                ],
                "summary": "Show all plans",
                "operationId": "get-all-plans",
                "parameters": [
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/plan.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "create plan",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plan"
                ],
                "summary": "Create plan",
                "operationId": "add-plan",
                "parameters": [
                    {
                        "description": "Plan object",
                        "name": "Plan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/plan.plan"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Plan"
                        }
                    }
                }
            }
        },
        "/plans/{plan_id}": {
            "get": {
                "description": "Get plan by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plan"
                ],
                "summary": "Show a plan by id",
                "operationId": "get-plan-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plan ID",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Plan"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update plan by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Plan"
                ],
                "summary": "Update a plan by id",
                "operationId": "update-plan-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plan ID",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Plan",
                        "name": "Plan",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/plan.plan"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Plan"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete plan by ID",
                "tags": [
                    "Plan"
                ],
                "summary": "Delete a plan",
                "operationId": "delete-plan-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Plan ID",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "description": "Get all products",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Show all products",
                "operationId": "get-all-products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create product",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Create product",
                "operationId": "add-product",
                "parameters": [
                    {
                        "description": "Product object",
                        "name": "Product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.product"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/products/{product_id}": {
            "get": {
                "description": "Get product by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Show a product by id",
                "operationId": "get-product-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update product by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Update a product by id",
                "operationId": "update-product-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product",
                        "name": "Product",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/product.product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete product by ID",
                "tags": [
                    "Product"
                ],
                "summary": "Delete a product",
                "operationId": "delete-product-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/tags": {
            "get": {
                "description": "Get all tags",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag"
                ],
                "summary": "Show all tags",
                "operationId": "get-all-tags",
                "parameters": [
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tag.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create tag",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag"
                ],
                "summary": "Create tag",
                "operationId": "add-tag",
                "parameters": [
                    {
                        "description": "Tag object",
                        "name": "Tag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tag.tag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Tag"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/tags/{tag_id}": {
            "get": {
                "description": "Get tag by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag"
                ],
                "summary": "Show a tag by id",
                "operationId": "get-tag-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag ID",
                        "name": "tag_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Tag"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update tag by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag"
                ],
                "summary": "Update a tag by id",
                "operationId": "update-tag-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag ID",
                        "name": "tag_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tag",
                        "name": "Tag",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/tag.tag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Tag"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete tag by ID",
                "tags": [
                    "Tag"
                ],
                "summary": "Delete a tag",
                "operationId": "delete-tag-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag ID",
                        "name": "tag_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Get all users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Show all users",
                "operationId": "get-all-users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create user",
                "operationId": "add-user",
                "parameters": [
                    {
                        "description": "User object",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.user"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/{user_id}": {
            "get": {
                "description": "Get user by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Show a user by id",
                "operationId": "get-user-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update user by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update a user by id",
                "operationId": "update-user-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User",
                        "name": "User",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/user.user"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete user by ID",
                "tags": [
                    "User"
                ],
                "summary": "Delete a user",
                "operationId": "delete-user-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "cart.cart": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "cart.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Cart"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "category.category": {
            "type": "object",
            "required": [
                "slug",
                "title"
            ],
            "properties": {
                "parent_id": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "category.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Category"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "currency.currency": {
            "type": "object",
            "required": [
                "iso_code",
                "name"
            ],
            "properties": {
                "iso_code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "currency.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Currency"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dataset.dataset": {
            "type": "object",
            "properties": {
                "contact_email": {
                    "type": "string"
                },
                "contact_name": {
                    "type": "string"
                },
                "data_standard": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "featured_media_id": {
                    "type": "integer"
                },
                "format": {
                    "type": "integer"
                },
                "format_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "frequency": {
                    "type": "string"
                },
                "granularity": {
                    "type": "string"
                },
                "license": {
                    "type": "string"
                },
                "related_articles": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "temporal_coverage": {
                    "type": "string"
                },
                "time_saved": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dataset.datasetData": {
            "type": "object",
            "properties": {
                "contact_email": {
                    "type": "string"
                },
                "contact_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "data_standard": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "format": {
                    "type": "integer"
                },
                "formats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Format"
                    }
                },
                "frequency": {
                    "type": "string"
                },
                "granularity": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "license": {
                    "type": "string"
                },
                "related_articles": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "temporal_coverage": {
                    "type": "string"
                },
                "time_saved": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dataset.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dataset.datasetData"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "format.datasetFormat": {
            "type": "object",
            "required": [
                "format_id",
                "url"
            ],
            "properties": {
                "format_id": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "format.format": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "is_default": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "format.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Format"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "item.cartItem": {
            "type": "object",
            "required": [
                "product_id"
            ],
            "properties": {
                "product_id": {
                    "type": "integer"
                }
            }
        },
        "item.orderItem": {
            "type": "object",
            "required": [
                "product_id"
            ],
            "properties": {
                "extra_info": {
                    "type": "string"
                },
                "product_id": {
                    "type": "integer"
                }
            }
        },
        "item.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CartItem"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "membership.membership": {
            "type": "object",
            "required": [
                "payment_id",
                "plan_id",
                "user_id"
            ],
            "properties": {
                "payment_id": {
                    "type": "integer"
                },
                "plan_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "membership.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Membership"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "model.Cart": {
            "type": "object",
            "required": [
                "status",
                "user_id"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.CartItem": {
            "type": "object",
            "required": [
                "cart_id",
                "product_id"
            ],
            "properties": {
                "cart_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "product": {
                    "type": "object",
                    "$ref": "#/definitions/model.Product"
                },
                "product_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Category": {
            "type": "object",
            "required": [
                "slug",
                "title"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "parent_id": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Currency": {
            "type": "object",
            "required": [
                "iso_code",
                "name"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "iso_code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Dataset": {
            "type": "object",
            "properties": {
                "contact_email": {
                    "type": "string"
                },
                "contact_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "data_standard": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "format": {
                    "type": "integer"
                },
                "frequency": {
                    "type": "string"
                },
                "granularity": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "license": {
                    "type": "string"
                },
                "related_articles": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "temporal_coverage": {
                    "type": "string"
                },
                "time_saved": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.DatasetFormat": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "dataset_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "format": {
                    "type": "object",
                    "$ref": "#/definitions/model.Format"
                },
                "format_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "model.Format": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_default": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Membership": {
            "type": "object",
            "required": [
                "payment_id",
                "plan_id",
                "status",
                "user_id"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "payment": {
                    "type": "object",
                    "$ref": "#/definitions/model.Payment"
                },
                "payment_id": {
                    "type": "integer"
                },
                "plan": {
                    "type": "object",
                    "$ref": "#/definitions/model.Plan"
                },
                "plan_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "type": "object",
                    "$ref": "#/definitions/model.User"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.Order": {
            "type": "object",
            "required": [
                "cart_id",
                "payment_id",
                "status",
                "user_id"
            ],
            "properties": {
                "cart": {
                    "type": "object",
                    "$ref": "#/definitions/model.Cart"
                },
                "cart_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "payment": {
                    "type": "object",
                    "$ref": "#/definitions/model.Payment"
                },
                "payment_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.OrderItem": {
            "type": "object",
            "required": [
                "extra_info",
                "order_id",
                "product_id"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "extra_info": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "order_id": {
                    "type": "integer"
                },
                "product": {
                    "type": "object",
                    "$ref": "#/definitions/model.Product"
                },
                "product_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Payment": {
            "type": "object",
            "required": [
                "amount",
                "currency_id",
                "gateway",
                "status"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "object",
                    "$ref": "#/definitions/model.Currency"
                },
                "currency_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "gateway": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Plan": {
            "type": "object",
            "required": [
                "plan_info",
                "plan_name",
                "status"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "plan_info": {
                    "type": "string"
                },
                "plan_name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Product": {
            "type": "object",
            "required": [
                "currency_id",
                "price",
                "slug",
                "status",
                "title"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "object",
                    "$ref": "#/definitions/model.Currency"
                },
                "currency_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "price": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Tag": {
            "type": "object",
            "required": [
                "slug",
                "title"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "required": [
                "email",
                "first_name",
                "last_name"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "order.order": {
            "type": "object",
            "required": [
                "cart_id",
                "payment_id",
                "user_id"
            ],
            "properties": {
                "cart_id": {
                    "type": "integer"
                },
                "payment_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "order.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Order"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "payment.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Payment"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "payment.payment": {
            "type": "object",
            "required": [
                "amount",
                "currency_id"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "currency_id": {
                    "type": "integer"
                },
                "gateway": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "plan.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Plan"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "plan.plan": {
            "type": "object",
            "required": [
                "plan_name"
            ],
            "properties": {
                "plan_info": {
                    "type": "string"
                },
                "plan_name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "product.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/product.productData"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "product.product": {
            "type": "object",
            "required": [
                "price",
                "slug",
                "title"
            ],
            "properties": {
                "category_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "currency_id": {
                    "type": "integer"
                },
                "price": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "product.productData": {
            "type": "object",
            "required": [
                "currency_id",
                "price",
                "slug",
                "status",
                "title"
            ],
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Category"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "object",
                    "$ref": "#/definitions/model.Currency"
                },
                "currency_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "price": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Tag"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "tag.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Tag"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "tag.tag": {
            "type": "object",
            "required": [
                "slug",
                "title"
            ],
            "properties": {
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "user.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.User"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "user.user": {
            "type": "object",
            "required": [
                "email",
                "first_name"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:7720",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "Data portal API",
	Description: "This is a sample server.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
